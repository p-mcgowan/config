<snippet>
    <content><![CDATA[
/* eslint-disable max-lines-per-function */
import app from '@/app';
import sequelize from '@/database';
import supertest from 'supertest';

const RESPONSE_CODES = {
  get: 200,
  post: 200,
  delete: 204,
  patch: 204,
  notFound: 404,
  unprocessable: 422,
};

const request = supertest(app);

jest.mock('morgan', () => () => (req: any, res: any, next: any) => next());

describe('${1:SomethingDomain}', () => {
  const baseUrl = '${2:/project-name}';

  afterAll(async () => {
    jest.restoreAllMocks();
    await sequelize.close();
  });

  it('${3:should succeed in doing something}', async () => {
    await request
      .post(`\${baseUrl}/collections`)
      .send({ data: 'thing' })
      .expect(({ status, body }) => {
        expect(status).toBe(RESPONSE_CODES.post);
        expect(body).toBeDefined();
      });
  });
});

]]>
    </content>
    <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
    <tabTrigger>spec</tabTrigger>
    <!-- Optional: Set a scope to limit where the snippet will trigger -->
    <scope>source.ts, source.js, source.tsx</scope>
</snippet>
