<snippet>
    <content>
<![CDATA[
/* eslint-disable max-lines-per-function */
import app from '@/app';
import { baseUrl as root } from '@/http/nodegen/routesImporter';
${3:// }import sequelize from '@/database/sequelize';
import supertest from 'supertest';

const RESPONSE_CODES = {
  get: 200,
  post: 200,
  delete: 204,
  patch: 204,
  notFound: 404,
  unprocessable: 422,
};

let request: supertest.SuperTest<supertest.Test>;

jest.mock('morgan', () => () => (req: any, res: any, next: any) => next());

describe('${1:SomethingDomain}', () => {
  const baseUrl = root.replace(/\/*\$/, '');

  beforeAll(async () => {
    request = supertest((await app()).expressApp);
  });

  afterAll(async () => {
    jest.restoreAllMocks();
    ${3:// }await sequelize.close();
  });

  it('${2:should succeed in doing something}', async () => {
    await request
      .post(`\${baseUrl}/collections`)
      .send({ data: 'thing' })
      .expect(({ status, body }) => {
        expect(status).toBe(RESPONSE_CODES.post);
        expect(body).toBeDefined();
      });
  });$0
});

]]>
    </content>
    <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
    <tabTrigger>spec</tabTrigger>
    <!-- Optional: Set a scope to limit where the snippet will trigger -->
    <scope>source.ts, source.js, source.tsx</scope>
</snippet>
